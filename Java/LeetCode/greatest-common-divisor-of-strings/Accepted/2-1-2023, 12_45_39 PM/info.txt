{"id":889240405,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1675233939,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/889240405/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"42 MB","code":"class Solution {\n\n    String s1, s2;\n    int n1, n2;\n\n    public String gcdOfStrings(String str1, String str2) {\n        \n        s1 = str1;\n        s2 = str2;\n        \n        n1 = str1.length();\n        n2 = str2.length();\n\n        int min = Math.min(n1,n2);\n\n        while(min > 0){\n            if(n1 % min == 0 && n2 % min == 0){\n                String tmp1 = isPossible(s1,min);\n                String tmp2 = isPossible(s2,min);\n                if(tmp1 != null && tmp2 != null && tmp1.equals(tmp2)){\n                    return tmp1;\n                }\n            }\n            min--;\n        }\n\n        return \"\";\n        \n    }\n\n    private String isPossible(String s, int len){\n        int i = 0;\n        String sub = null, sub2;\n        while(i<s.length()){\n            sub2 = s.substring(i,i+len);\n            if(sub != null && !sub2.equals(sub))\n                return null;\n            sub = sub2;\n            i += len;\n        }\n        return sub;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false}