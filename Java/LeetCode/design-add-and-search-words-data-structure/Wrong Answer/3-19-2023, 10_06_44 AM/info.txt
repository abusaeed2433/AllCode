{"id":917877947,"lang":"java","lang_name":"Java","time":"4 days, 6 hours","timestamp":1679198804,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/917877947/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"N/A","code":"class Trie{\n    private Trie[] childs = new Trie[26];\n    private boolean isEnd = false;\n    public void insert(Character ch, boolean isEnd){\n        if(childs[ch-'a'] == null){\n            childs[ch-'a'] = new Trie();\n        }\n        if(!childs[ch-'a'].isEnd){\n            childs[ch-'a'].isEnd = isEnd;\n        }\n    }\n    public Trie contains(Character ch){\n        return childs[ch-'a'];\n    }\n    public boolean isEnd(){\n        return true;\n    }\n}\n\nclass WordDictionary {    \n    private Trie root;\n    public WordDictionary() {\n        root = new Trie();\n    }\n    \n    public void addWord(String word) {\n        int n = word.length() - 1;\n        for(int i=0; i<=n; i++){\n            root.insert(word.charAt(i),i==n);\n        }\n    }\n    \n    public boolean search(String word) {\n        return search(root,word,0);\n    }\n\n    private boolean search(Trie cur,String s, int index){\n        int n = s.length();\n        if(index >= n) return true;\n\n\n        Character ch = s.charAt(index), mx = ch;\n\n        if(s.charAt(index)=='.'){\n            ch = 'a';\n            mx = 'z';            \n        }                \n        \n        while(ch <= mx ){\n            Trie newRoot = root.contains(ch);\n            if( newRoot != null){\n                if(index == n-1){\n                    return newRoot.isEnd();\n                }\n                return search(newRoot,s,index+1);\n            }\n            ch++;\n        }\n        return false;\n    }\n}\n\n/**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary obj = new WordDictionary();\n * obj.addWord(word);\n * boolean param_2 = obj.search(word);\n */","compare_result":"11111100000000100000000000001","title_slug":"design-add-and-search-words-data-structure","has_notes":false}