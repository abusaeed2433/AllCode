{"id":911806990,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1678330763,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/911806990/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode detectCycle(ListNode head) {\n        Map<Integer,ListNode> map = new HashMap<>();\n\n        while(head != null){\n            if(map.containsKey(head.val)){\n                return map.get(head.val);\n            }\n            map.put(head.val,head);\n            head = head.next;\n        }\n\n        return null;\n    }\n}","compare_result":"11111100000000000","title_slug":"linked-list-cycle-ii","has_notes":false}