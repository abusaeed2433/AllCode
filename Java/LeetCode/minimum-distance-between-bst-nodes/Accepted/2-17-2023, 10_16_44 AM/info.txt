{"id":899523904,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676607404,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/899523904/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"39.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    private List<Integer> list = new ArrayList<>();\n\n    public int minDiffInBST(TreeNode root) {\n        traverse(root);\n        int ans = Integer.MAX_VALUE;\n        for(int i=1;i<list.size();i++){\n            ans = Math.min(ans, list.get(i)-list.get(i-1));\n        }\n        return ans;\n    }\n\n    private void traverse(TreeNode root){\n        if(root == null) return;    \n        traverse(root.left);\n        list.add(root.val);\n        traverse(root.right);\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false}