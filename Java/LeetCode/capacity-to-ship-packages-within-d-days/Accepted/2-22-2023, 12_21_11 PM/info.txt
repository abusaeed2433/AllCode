{"id":902734683,"lang":"java","lang_name":"Java","time":"4 weeks, 1 day","timestamp":1677046871,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/902734683/","is_pending":"Not Pending","title":"Capacity To Ship Packages Within D Days","memory":"54.1 MB","code":"class Solution {\r\n    private int[] weights;\r\n    private int days;\r\n    private int n;\r\n    public int shipWithinDays(int[] weights, int days) {\r\n        \r\n        this.weights = weights;\r\n        this.days = days;\r\n        this.n = weights.length;\r\n        int sum = 0, ans = Integer.MIN_VALUE;\r\n        \r\n        for(int w : weights){\r\n            sum += w;\r\n            ans = Math.max(ans,w);\r\n        }\r\n\r\n        if(isPossible(ans)) return ans;\r\n\r\n        while(ans <= sum){\r\n            \r\n            int mid = (ans+sum)/2;\r\n//            System.out.println(ans +\" \"+sum +\" \"+mid);\r\n            if(isPossible(mid)){\r\n                sum = mid-1;\r\n            }\r\n            else{\r\n                ans = mid+1;\r\n            }\r\n            \r\n        }\r\n\r\n        return ans;\r\n    }\r\n\r\n    private boolean isPossible(int cap){\r\n        int count = 0, cur = 0;\r\n        for(int weight : weights){\r\n            cur += weight;\r\n            if(cur >= cap){\r\n                count++;\r\n                cur = (cur==cap) ? 0 : weight;\r\n            }\r\n        }\r\n        if(cur > 0) count++;\r\n        return (count <= days);\r\n\r\n    }\r\n\r\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"capacity-to-ship-packages-within-d-days","has_notes":false}