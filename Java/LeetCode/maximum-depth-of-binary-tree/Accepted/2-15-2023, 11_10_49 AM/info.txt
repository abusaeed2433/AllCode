{"id":898263820,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676437849,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/898263820/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"42.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxDepth(TreeNode root) {\n        return maxDepth(root, 0);\n    }\n\n    private int maxDepth(TreeNode root, int height){\n        if(root == null) return height;\n\n        return Math.max(\n            maxDepth(root.left,height+1),\n            maxDepth(root.right,height+1)\n        );\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false}