{"id":895242651,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1676020821,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/895242651/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"43.6 MB","code":"class Solution {\n\n    private int n;\n    private boolean[][] visited;\n    public int maxDistance(int[][] grid) {\n        \n        n = grid.length;\n\n        Queue<Pair> queue = new LinkedList<>();\n\n        visited = new boolean[n][n];\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                visited[i][j] = (grid[i][j] == 1);\n\n                if( grid[i][j] == 1){\n                    queue.add( new Pair(i,j) );\n                }\n            }\n        }\n\n        int dist = -1;\n        while( !queue.isEmpty() ){\n\n            int size = queue.size();\n\n            while( size-- > 0){\n\n                Pair pair = queue.poll();\n\n                for(int i=0;i<4;i++){\n                    Pair p = pair.getNew(i);\n                    if(p.test()){\n                        queue.add(p);\n                    }\n                }\n\n            }\n            dist++;\n        }\n\n        return (dist == 0) ? -1 : dist;\n\n    }\n\n    class Pair{\n        public static int[][] dir = new int[][]{{-1,0},{0,1},{1,0},{0,-1}};\n        public int i, j;\n\n        public Pair(int i, int j){\n            this.i = i;\n            this.j = j;\n        }\n\n        public Pair getNew(int i){\n            Pair p =  new Pair(this.i+dir[i][0], this.j+dir[i][1]);\n            return p;\n        }\n\n        public boolean test(){            \n            boolean tmp = i>=0 && j>=0 && i<n && j<n && !visited[i][j];\n\n            if(tmp){\n                visited[i][j] = true;\n            }\n            return tmp;\n        }\n\n    }\n\n}\n\n","compare_result":"1111111111111111111111111111111111111","title_slug":"as-far-from-land-as-possible","has_notes":false}