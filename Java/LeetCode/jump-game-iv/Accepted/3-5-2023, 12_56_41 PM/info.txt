{"id":909393191,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1677999401,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/909393191/","is_pending":"Not Pending","title":"Jump Game IV","memory":"57.8 MB","code":"class Solution {\n\n    public int minJumps(int[] arr) {\n        int n = arr.length;\n        Map<Integer,List<Integer>> map = new HashMap<>();\n\n        for(int i=0;i<n;i++){\n            map.computeIfAbsent(arr[i],v->{\n                return new LinkedList<>();\n            }).add(i);\n        }\n\n        int ans = 0;\n        Queue<Integer> q = new LinkedList<>();\n        q.add(0);\n        boolean[] visited = new boolean[n];\n\n        while(!q.isEmpty()){\n            int size = q.size();\n\n            while(size-- >0){\n                int x = q.poll();\n                if(x == n-1) return ans;\n\n                if(visited[x]) continue;\n\n                List<Integer> adj = map.get(arr[x]);\n                for(int ind : adj){\n                    q.add(ind);                    \n                }\n\n                adj.clear(); // removing hudai search\n                \n                visited[x] = true;\n                if(x+1 < n && !visited[x+1]){\n                    q.add(x+1);\n                }\n                if(x-1 >=0 && !visited[x-1]){\n                    q.add(x-1);\n                }\n            }\n            ans++;\n        }\n        return ans;\n\n    }\n\n}\n","compare_result":"111111111111111111111111111111111","title_slug":"jump-game-iv","has_notes":false}