{"id":923966883,"lang":"java","lang_name":"Java","time":"1 day, 12 hours","timestamp":1680056938,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/923966883/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"43.1 MB","code":"class Solution {\n    private int ans = 0;\n    private int[] sat;\n    private int n;\n    private int[][] dp;\n\n    public int maxSatisfaction(int[] satisfaction) {\n        this.sat = satisfaction;\n        this.n = sat.length;\n        dp = new int[n][n];\n        for(int[] arr : dp){\n            Arrays.fill(arr,-1);\n        }\n        \n        Arrays.sort(this.sat);\n        return calc(0,1);        \n    }\n    private int calc(int i,int rl){\n        if(i>=n){\n            return 0;\n        }\n\n        if(dp[i][rl-1] != -1){\n            return dp[i][rl-1];\n        }\n        \n        return dp[i][rl-1] = Math.max(\n            sat[i] * rl + calc(i+1,rl+1),\n            calc(i+1,rl)\n        );\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes","has_notes":false}