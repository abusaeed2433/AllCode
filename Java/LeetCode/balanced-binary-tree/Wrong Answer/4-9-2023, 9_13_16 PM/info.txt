{"id":930782880,"lang":"java","lang_name":"Java","time":"14 hours, 52 minutes","timestamp":1681053196,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/930782880/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private int mn = Integer.MAX_VALUE, mx = Integer.MIN_VALUE;\n\n    public boolean isBalanced(TreeNode root) {\n        if(root == null) return true;\n        dfs(root,0);\n        return (mx - mn) <= 1;\n    }\n\n    private void dfs(TreeNode root, int d){\n        if(root == null) return;\n        if(root.left == null && root.right == null){\n            mn = Math.min(mn,d+1);\n            mx = Math.max(mx,d+1);\n            return;\n        }\n        \n        dfs(root.left,d+1);\n        dfs(root.right,d+1);\n    }\n\n}","compare_result":"111111010100001001000000000111100000000000000000001111111111111100000000000000000000000000001101100001101100000000000000111111111111110010000100000011000011111111111111000000000000001101100001101100000000000000111100000111111110","title_slug":"balanced-binary-tree","has_notes":false}