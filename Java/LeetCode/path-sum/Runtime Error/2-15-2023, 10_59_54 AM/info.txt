{"id":898258331,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676437194,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/898258331/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int targetSum;\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        if(root == null) return false;\n\n        this.targetSum = targetSum;\n        return isPathAvailable(root,0);\n    }\n\n    private boolean isPathAvailable(TreeNode root, int sum){\n        sum += root.val;  \n\n        if(root.left == null && root.right == null){\n            return ( sum == targetSum );\n        }\n\n        return isPathAvailable(root.left,sum) || isPathAvailable(root.right,sum);\n\n    \n    }\n\n}","compare_result":"111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum","has_notes":false}