{"id":894553893,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1675927275,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/894553893/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"42.8 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n\n        Map<ListNode,Boolean> map = new HashMap<>();\n\n        while(head != null){            \n\n            if(map.containsKey(head)) return true;\n            map.put(head,true);            \n            head = head.next;\n            \n        }\n\n        return false;\n\n        \n    }\n}","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false}