{"id":884472419,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1674578436,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/884472419/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"42.3 MB","code":"class Solution {\n    \n    List<String> ans = new ArrayList<>();\n    String[] values = new String[]{\n        \"abc\", \"def\", \"ghi\",\"jkl\",\"mno\",\"pqrs\",\"tuv\",\"wxyz\"\n    };\n    StringBuilder sb = new StringBuilder();\n\n    public List<String> letterCombinations(String digits) {\n        if(digits.length() == 0) return ans;\n        solve(digits,0,0);\n        return ans;\n    }\n\n    private void solve(String digits, int level, int index){\n        \n        if(level >= digits.length()) {\n            ans.add( sb.toString());\n            return;\n        }\n\n        int ind = digits.charAt(level) - 50;\n\n        for(int i=0; i<values[ind].length(); i++){\n            sb.append(values[ind].charAt(i));\n            solve(digits,level+1,0);\n            sb.setLength(Math.max(sb.length() - 1, 0));\n        }\n        //int i = digits.charAt(index) - 50;\n\n    }\n}","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false}