{"id":893802288,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1675832192,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/893802288/","is_pending":"Not Pending","title":"Jump Game II","memory":"42.7 MB","code":"class Solution {\n\n    public int jump(int[] nums) {\n        \n        int n = nums.length;\n\n        int[] dp = new int[n];\n        for(int i=0; i<n; i++) dp[i] = Integer.MAX_VALUE;\n        dp[0] = 0;\n\n        for(int i=0; i<n; i++){\n            \n            int ind = Math.min( i+nums[i],n-1);\n\n            for(int j=i+1; j<=ind; j++){ // relaxing\n                dp[j] = Math.min( dp[j] , dp[i]+1);\n            }\n\n        }\n\n        return dp[n-1];\n\n        // 0 1 1 2 2\n//        for(int i=0; i<n; i++){\n\n//        }\n    \n    }\n\n    \n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii","has_notes":false}