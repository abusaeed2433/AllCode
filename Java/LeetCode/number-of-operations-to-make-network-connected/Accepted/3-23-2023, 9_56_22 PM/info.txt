{"id":920800278,"lang":"java","lang_name":"Java","time":"6 days, 23 hours","timestamp":1679586982,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/920800278/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"59 MB","code":"class Solution {\n    private List<List<Integer>> adj = new ArrayList<>();\n    private boolean[] visited;\n\n    public int makeConnected(int n, int[][] connections) {\n        int cables = connections.length;\n        visited = new boolean[n];\n\n        if(cables < n-1){\n            return -1;\n        }\n\n        for(int i=0;i<n;i++){\n            adj.add(new ArrayList<>());\n        }\n\n        for(int[] cbl : connections){\n            adj.get(cbl[0]).add(cbl[1]);\n            adj.get(cbl[1]).add(cbl[0]);\n        }\n        \n        int comp = 0;\n        for(int i=0;i<n;i++){\n            if(visited[i]) continue;\n            dfs(i);\n            // for(boolean b : visited){\n            //     System.out.print(b+\" \");\n            // }\n            // System.out.println(\"\");\n            comp++;\n        }\n        return comp-1;\n    }\n\n    private void dfs(int sIndex){\n        for(int pc : adj.get(sIndex)){\n            if(visited[pc]) continue;\n            visited[pc] = true;\n            dfs(pc);\n        }\n    }\n\n}","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false}