{"id":895901849,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1676118919,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/895901849/","is_pending":"Not Pending","title":"Shortest Path with Alternating Colors","memory":"43 MB","code":"// DON'T HAVE TIME TO SOLVE RIGHT NOW. + CAN'T LOSE MY PROGRESS. SO COPYING FOR NOW\nclass Solution {\n    public int[] shortestAlternatingPaths(int n, int[][] redEdges, int[][] blueEdges) {\n        Map<Integer, List<List<Integer>>> adj = new HashMap<>();\n        for (int[] redEdge : redEdges) {\n            adj.computeIfAbsent(redEdge[0], k -> new ArrayList<List<Integer>>()).add(\n                    Arrays.asList(redEdge[1], 0));\n        }\n\n        for (int[] blueEdge : blueEdges) {\n            adj.computeIfAbsent(blueEdge[0], k -> new ArrayList<List<Integer>>()).add(\n                    Arrays.asList(blueEdge[1], 1));\n        }\n\n        int[] answer = new int[n];\n        Arrays.fill(answer, -1);\n        boolean[][] visit = new boolean[n][2];\n        Queue<int[]> q = new LinkedList<>();\n\n        // Start with node 0, with number of steps as 0 and undefined color -1.\n        q.offer(new int[] { 0, 0, -1 });\n        answer[0] = 0;\n        visit[0][1] = visit[0][0] = true;\n\n        while (!q.isEmpty()) {\n            int[] element = q.poll();\n            int node = element[0], steps = element[1], prevColor = element[2];\n\n            if (!adj.containsKey(node)) {\n                continue;\n            }\n\n            for (List<Integer> nei : adj.get(node)) {\n                int neighbor = nei.get(0);\n                int color = nei.get(1);\n                if (!visit[neighbor][color] && color != prevColor) {\n                    if (answer[neighbor] == -1)\n                        answer[neighbor] = 1 + steps;\n                    visit[neighbor][color] = true;\n                    q.offer(new int[] { neighbor, 1 + steps, color });\n                }\n            }\n        }\n        return answer;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-with-alternating-colors","has_notes":false}