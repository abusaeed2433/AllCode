{"id":912463141,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1678422797,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/912463141/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    private ListNode head;\n    private ListNode cur;\n    public Solution(ListNode head) {\n        this.head = head;\n        cur = head;\n    }\n    \n    public int getRandom() {\n        if(cur == null){\n            cur = head;\n        }\n\n        ListNode tmp = cur;\n        cur = cur.next;\n        return tmp.val;\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(head);\n * int param_1 = obj.getRandom();\n */","compare_result":"11110001","title_slug":"linked-list-random-node","has_notes":false}