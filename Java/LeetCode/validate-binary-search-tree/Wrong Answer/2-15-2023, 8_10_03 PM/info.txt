{"id":898517912,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676470203,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/898517912/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private boolean isFirst = true;\n    private int rootVal;\n    public boolean isValidBST(TreeNode root) {\n        if(isFirst){\n            rootVal = root.val;\n            isFirst = false;\n        }\n        if(root == null) return true;\n\n        int cur = root.val;\n\n        if( \n        (root.left == null || (root.left.val < cur && root.left.val < rootVal ))&&\n        (root.right == null||(root.right.val > cur && root.right.val>rootVal) )\n        ){\n                return isValidBST(root.left) && isValidBST(root.right);\n        }\n        else{\n            return false;\n        }\n    }\n}","compare_result":"1111111111110110101111001110001000000011110110111111101101110111111111111010011110","title_slug":"validate-binary-search-tree","has_notes":false}