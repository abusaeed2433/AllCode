{"id":913610711,"lang":"java","lang_name":"Java","time":"1 week, 4 days","timestamp":1678596695,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/913610711/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"44 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        List<Integer> list = new ArrayList<>();\n        for(ListNode head : lists){\n            while(head != null){\n                list.add(head.val);\n                head = head.next;\n            }\n        }\n\n        Collections.sort(list);\n        if(list.isEmpty()) return null;\n        ListNode head = new ListNode(list.get(0));\n        ListNode last = head;\n        for(int i=1; i<list.size();i++){\n            last.next = new ListNode(list.get(i));\n            last = last.next;\n        }\n        return head;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false}