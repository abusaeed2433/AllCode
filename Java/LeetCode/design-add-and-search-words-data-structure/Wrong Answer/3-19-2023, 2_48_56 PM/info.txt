{"id":918005670,"lang":"java","lang_name":"Java","time":"4 days, 2 hours","timestamp":1679215736,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/918005670/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"N/A","code":"class Trie{\n    private Trie[] childs = new Trie[26];\n    public boolean isEnd = false;\n\n    public void insert(Character ch, boolean isEnd){\n        if(childs[ch-'a'] == null){\n            childs[ch-'a'] = new Trie();\n        }\n        if(!childs[ch-'a'].isEnd){\n            childs[ch-'a'].isEnd = isEnd;\n        }\n    }\n    public Trie contains(Character ch){\n        return childs[ch-'a'];\n    }\n}\n\nclass WordDictionary {    \n    private Trie root;\n    public WordDictionary() {\n        root = new Trie();\n    }\n    \n    public void addWord(String word) {\n        addWord(root,word,0);\n    }\n\n    private void addWord(Trie root,String word, int index){\n        int n = word.length();\n        \n        if(index >= n){\n            root.isEnd = true;\n            return;\n        }\n\n        \n        Character ch = word.charAt(index);\n        Character mx = ch;\n            \n        if(ch == '.'){                \n            ch = 'a';\n            mx = 'z';\n        }\n\n        while(ch <= mx){\n            root.insert(ch,index==n);\n            addWord(root.contains(ch),word,index+1);\n            ch++;\n        }\n\n    }\n    \n    public boolean search(String word) {\n        return search(root,word,0);\n    }\n\n    private boolean search(Trie cur,String s, int index){\n        int n = s.length();\n        if(index >= n) return true;\n\n        Character ch = s.charAt(index);\n        Character mx = ch;\n\n        if(s.charAt(index)=='.'){\n            ch = 'a';\n            mx = 'z';\n        }\n        \n        boolean isPossible = false;\n        while(ch <= mx ){\n            Trie newRoot = cur.contains(ch);\n            if( newRoot != null){\n                if(index == n-1 && newRoot.isEnd){\n                    return true;\n                }\n                isPossible = search(newRoot,s,index+1);\n                if(isPossible) return true;\n            }\n            ch++;\n        }\n        return false;\n    }\n}\n\n/**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary obj = new WordDictionary();\n * obj.addWord(word);\n * boolean param_2 = obj.search(word);\n */","compare_result":"11111111000000110001100001111","title_slug":"design-add-and-search-words-data-structure","has_notes":false}