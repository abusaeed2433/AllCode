{"id":893261261,"lang":"java","lang_name":"Java","time":"1 month, 2 weeks","timestamp":1675766192,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/893261261/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"N/A","code":"class Solution {\n\n    private Node[] nodes = new Node[2];\n    private int ans = 0, realAns = 0;\n\n    public int totalFruit(int[] fruits) {\n        \n        for(int i=0;i<2;i++) nodes[i] = new Node();\n    \n        for(int i=0;i<fruits.length; i++){\n            takeOrReject(fruits[i],i);\n        }\n\n        return Math.max(ans,realAns);\n\n    }\n\n    private void takeOrReject(int val, int index){\n\n        for(int i=0; i<2; i++){\n            if(nodes[i].val == val){\n                nodes[i].set(val,index);\n                ans++;\n                return;\n            }\n\n            if(nodes[i].val == -1){\n                nodes[i].set(val,index);\n                ans++;\n                return;\n            }\n        }\n\n        realAns = Math.max(ans,realAns);\n\n        if(nodes[0].index < nodes[1].index){            \n            ans -= nodes[0].count-1;\n            nodes[0].count = 0;\n            nodes[0].set(val,index);\n        }\n        else{\n            ans -= nodes[1].count-1;\n            nodes[1].count = 0;\n            nodes[1].set(val,index);\n        }\n    }\n}\n\nclass Node{\n    public int val = -1, count = 0, index = -1;\n    public void set(int val, int index){\n        this.val = val;\n        this.index = index;\n        count++;\n    }\n}","compare_result":"1111111111111111111111111111111111111010110000000010000100001000000000110000001000000000001","title_slug":"fruit-into-baskets","has_notes":false}