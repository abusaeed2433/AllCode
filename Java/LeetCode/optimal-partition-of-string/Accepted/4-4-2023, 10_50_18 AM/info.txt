{"id":927626156,"lang":"java","lang_name":"Java","time":"6 days, 1 hour","timestamp":1680583818,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/927626156/","is_pending":"Not Pending","title":"Optimal Partition of String","memory":"42.9 MB","code":"class Solution {\n\n    int[] map = new int[26];\n\n    public int partitionString(String s) {\n        int ans = 1;\n        resetMap();\n\n        for(int i=0;i<s.length();i++){\n            if(map[s.charAt(i)-97] != -1){        \n                ans++;\n                resetMap();\n            }\n            map[ s.charAt(i)-97 ] = i;            \n        }\n\n        return ans;\n    }\n\n    private void resetMap(){\n            for(int i=0;i<26;i++) map[i] = -1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"optimal-partition-of-string","has_notes":false}