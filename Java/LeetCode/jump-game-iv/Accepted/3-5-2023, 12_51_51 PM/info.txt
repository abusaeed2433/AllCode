{"id":909390887,"lang":"java","lang_name":"Java","time":"2 weeks, 4 days","timestamp":1677999111,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/909390887/","is_pending":"Not Pending","title":"Jump Game IV","memory":"52.7 MB","code":"class Solution {\n\n    public int minJumps(int[] arr) {\n        int n = arr.length;\n        //Map<Integer,List<Integer>> adj = new HashMap<>();\n        Map<Integer,List<Integer>> map = new HashMap<>();\n\n        for(int i=0;i<n;i++){\n            List<Integer> list=map.getOrDefault(arr[i],new ArrayList<>());\n            \n            // adj.add(new ArrayList<>());\n            \n            // if(i-1 >= 0) {                \n            //     adj.get(i).add(i-1);\n            // }\n            // if(i+1 < n) {\n            //     adj.get(i).add(i+1);\n            // }\n\n            // for(int ind : list){\n            //     adj.get(i).add(arr[i]);\n            //     adj.get(ind).add(i);\n            // }\n\n            list.add(i);\n            map.put(arr[i],list);\n\n        }\n\n        int ans = 0;\n        Queue<Integer> q = new LinkedList<>();\n        q.add(0);\n        boolean[] visited = new boolean[n];\n\n        while(!q.isEmpty()){\n            int size = q.size();\n            while(size-- >0){\n                int x = q.poll();\n                if(x == n-1) return ans;\n                if(visited[x]) continue;\n                List<Integer> adj = map.get(arr[x]);\n                for(int ind : adj){\n                    q.add(ind);                    \n                }\n                adj.clear();\n                visited[x] = true;\n                if(x+1 < n && !visited[x+1]){\n                    q.add(x+1);\n                }\n                if(x-1 >=0 && !visited[x-1]){\n                    q.add(x-1);\n                }\n            }\n            ans++;\n        }\n        return ans;\n\n    }\n\n}\n","compare_result":"111111111111111111111111111111111","title_slug":"jump-game-iv","has_notes":false}