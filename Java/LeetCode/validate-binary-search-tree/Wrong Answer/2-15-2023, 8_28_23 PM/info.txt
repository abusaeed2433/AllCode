{"id":898528325,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676471303,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/898528325/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private int rootVal;\n    public boolean isValidBST(TreeNode root) {\n        rootVal = root.val;\n        return isValid(root.left,true) && isValid(root.right,false);\n    }\n\n    private boolean isValid(TreeNode root, boolean leftTree){\n        if(root == null) return true;\n\n        if(leftTree){\n            if( root.val >= rootVal ) return false;\n        }\n        else{\n            if(root.val <= rootVal) return false;\n        }\n\n        int cur = root.val;\n        \n        if( (root.left == null || root.left.val < cur ) && \n            (root.right == null || root.right.val > cur) )\n        {\n            return isValid(root.left,leftTree) && isValid(root.right,leftTree);\n        }\n        else{\n            return false;\n        }\n    }\n}","compare_result":"1111111111111011111011111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}