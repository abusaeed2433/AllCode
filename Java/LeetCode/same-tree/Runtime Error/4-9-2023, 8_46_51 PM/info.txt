{"id":930771637,"lang":"java","lang_name":"Java","time":"15 hours, 19 minutes","timestamp":1681051611,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/930771637/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private List<Integer> arr = new ArrayList<>();\n    private List<Integer> brr = new ArrayList<>();\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        inTraverse(p,arr);\n        inTraverse(q,brr);\n\n        // for(Integer a : arr){\n        //     System.out.print(a+\" \");\n        // }\n        // System.out.println(\"i\");\n\n        // for(Integer a : brr){\n        //     System.out.print(a+\" \");\n        // }\n        // System.out.println(\"\");\n\n        if(arr.size() != brr.size() ) return false;\n        for(int i=0; i<arr.size(); i++){\n            if(arr.get(i) != brr.get(i)) return false;\n        }\n        return true;\n    }\n\n    private void inTraverse(TreeNode p, List<Integer> arr){\n        if(p.left == null && p.right == null){\n            //arr.add(null);\n            return;\n        }\n\n        if(p.left != null){\n            inTraverse(p.left,arr);\n            arr.add(p.left.val);\n        }\n        arr.add(p.val);\n        if(p.right != null){\n            inTraverse(p.right,arr);\n            arr.add(p.right.val);\n        }\n\n\n\n    }\n\n    \n}","compare_result":"111000000000000000000000000000000000000000000000000000000000","title_slug":"same-tree","has_notes":false}