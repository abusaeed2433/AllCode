{"id":900901224,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676802726,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/900901224/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        \n        int i = 0, j = 0, m = matrix.length-1, n = matrix[0].length-1;\n        while(i<m && j<n){\n            int i1 = (i+m)/2;\n            int j1 = (j+n)/2;\n            if(matrix[i1][j1] == target) return true;\n\n            if(i == i1 && j==j1) return false;\n\n            if(matrix[i1][j1] < target){\n                i = i1;\n                j = j1;\n            }\n            else{\n                m = i1;\n                n = j1;\n            }\n        }\n\n        return false;\n    }\n}","compare_result":"1111011011010110110011010101101010111010011000001100000110011010000001111111111101111111110011110110101111100001011111111010010100","title_slug":"search-a-2d-matrix-ii","has_notes":false}