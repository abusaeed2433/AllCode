{"id":895163456,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1676009899,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/895163456/","is_pending":"Not Pending","title":"As Far from Land as Possible","memory":"N/A","code":"class Solution {\n\n    private int n,m;\n    private int[][] grid;\n\n    public int maxDistance(int[][] grid) {\n        \n        this.grid = grid;\n\n        int ans = -1;\n\n        n = grid.length;\n        m = grid[0].length;\n\n        for(int i=0; i<n; i++){            \n            for(int j=0; j<m; j++){\n                if(grid[i][j] == 1) continue;\n                ans = Math.max(ans, getMinDis(i,j));\n            }\n        }\n        \n        return ans;\n\n    }\n\n    private int getMinDis(int i, int j){\n                \n        Queue<Node> queue = new LinkedList<>();\n\n        queue.add(new Node(i,j,0));\n        boolean[][] visited = new boolean[n][n];\n        visited[i][j] = true;\n\n        while( !queue.isEmpty() ){\n            Node nd = queue.remove();\n\n            i = nd.i-1; j = nd.j;            \n            if(i>=0 && !visited[i][j]) {\n                if(grid[i][j] == 1) return nd.dist+1;\n                visited[i][j] = true;\n                queue.add(new Node(i,j,nd.dist+1));\n            }\n\n\n            i = nd.i; j = nd.j-1;\n            if(j>=0 && !visited[i][j]) {\n                if(grid[i][j] == 1) return nd.dist+1;\n                visited[i][j] = true;\n                queue.add(new Node(i,j,nd.dist+1));\n            }\n\n\n            i = nd.i+1; j = nd.j;\n            if(i<n && !visited[i][j]) {\n                if(grid[i][j] == 1) return nd.dist+1;\n                visited[i][j] = true;\n                queue.add(new Node(i,j,nd.dist+1));\n            }\n\n            i = nd.i; j = nd.j+1;\n            if(j<n && !visited[i][j]) {\n                if(grid[i][j] == 1) return nd.dist+1;\n                visited[i][j] = true;\n                queue.add(new Node(i,j,nd.dist+1));\n            }\n            \n        }\n\n        return -1;\n    }\n\n    class Node{\n        public int i,j;\n        public int dist = 0;\n        public Node(int i, int j, int dist){\n            this.i = i;\n            this.j = j;\n            this.dist = dist;\n        }\n    }\n\n}\n\n","compare_result":"1111111111111111111111111111111111111","title_slug":"as-far-from-land-as-possible","has_notes":false}