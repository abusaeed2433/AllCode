{"id":898279063,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676439635,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/898279063/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> ans = new ArrayList<>();\n    List<Integer> ans2 = new ArrayList<>();\n    public boolean isSymmetric(TreeNode root) {\n\n        if(root == null) return true;\n\n        preOrder(root.left);\n        postOrder(root.right);\n        \n        if(ans.size() != ans2.size()) return false;\n\n        int i=0;\n        while(i<ans.size()){\n            if(ans.get(i) != ans2.get(i)) return false;\n            i++;\n        }\n\n        return true;    \n    }\n    \n    private void preOrder(TreeNode root){\n        if(root == null){\n            ans.add(null);\n            return;\n        }\n        ans.add(root.val);\n        preOrder(root.left);\n        preOrder(root.right);\n    }\n\n    private void postOrder(TreeNode root){\n        if(root == null){\n            ans2.add(null);\n            return;\n        }\n\n        ans2.add(root.val);\n        postOrder(root.right);\n        postOrder(root.left);\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}