{"id":898894831,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676520439,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/898894831/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"41.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private long prev = Long.MIN_VALUE;\n    private boolean ans = true;\n    public boolean isValidBST(TreeNode root) {\n        inOrder(root);\n        return ans;\n    }\n\n    private void inOrder(TreeNode root){\n        if(root == null) return;\n\n        inOrder(root.left);\n        if( root.val <= prev ){\n            ans = false;\n            return;\n        }\n        prev = root.val;\n        inOrder(root.right);\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}