{"id":883697789,"lang":"java","lang_name":"Java","time":"1 month, 4 weeks","timestamp":1674480005,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/883697789/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"41.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        ListNode ans = null, last = null;\n\n        while(list1 != null && list2 != null){\n            ListNode tmp;\n            if(list1.val <= list2.val){\n                tmp = list1;\n                list1 = list1.next;\n            }\n            else{\n                tmp = list2;\n                list2 = list2.next;\n            }\n            \n            if(ans == null) ans = tmp;\n            else last.next = tmp;\n\n            last = tmp;\n        }\n\n        if(list1 != null){\n            if(ans == null) ans = list1;\n            else last.next = list1;\n        }\n\n        if(list2 != null){\n            if(ans == null) ans = list2;\n            else last.next = list2;\n        }\n\n\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}