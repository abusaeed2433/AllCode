{"id":898246006,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676435706,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/898246006/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"40.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> ans = new ArrayList<>();\n    public List<Integer> preorderTraversal(TreeNode root) {\n        traverse(root);\n        return ans;\n    }\n\n    private void traverse(TreeNode root){\n        if(root == null) return;\n        ans.add(root.val);\n        traverse(root.left);\n        traverse(root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}