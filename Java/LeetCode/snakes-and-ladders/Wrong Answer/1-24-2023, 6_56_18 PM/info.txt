{"id":884353220,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1674564978,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/884353220/","is_pending":"Not Pending","title":"Snakes and Ladders","memory":"N/A","code":"class Solution {\n    public int snakesAndLadders(int[][] board) {\n        int n = board.length;\n        int grid = n*n;\n        \n        boolean[] visited = new boolean[grid];\n        int ans = 0;\n        ArrayList<Integer> arr = new ArrayList<>();\n        arr.add(0);\n\n        int i,j, tmp;\n        while( !arr.isEmpty() ){\n            tmp = arr.get(0);\n            i = tmp/n;\n            j = tmp%n;\n\n            int next = board[i][j];\n            if( next != -1){\n                if(visited[next-1] ){\n                    if(next == grid)\n                        return ans;\n                }\n                else{\n                    arr.add(next-1);\n                    visited[ next-1 ] = true;\n                }\n            }\n\n            for(int k=tmp; k<= Math.min(arr.get(0)+6,grid-1); k++){\n                tmp = k;\n                i = tmp/n;\n                j = tmp%n;\n\n                System.out.println(tmp);\n\n                if( !visited[tmp] ){\n                    arr.add(tmp);\n                    visited[ tmp ] = true;\n                    \n                }\n                else{\n                    if(tmp == grid-1)\n                        return ans;\n                }\n            }\n            arr.remove(0);\n            ans++;\n        }\n        return -1;\n    }\n\n    \n}","compare_result":"011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"snakes-and-ladders","has_notes":false}