{"id":912470724,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1678423840,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/912470724/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"44.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    private List<Integer> list = new ArrayList<>();\n    private Random ran = new Random();\n\n    public Solution(ListNode head) {\n        while(head != null){\n            list.add(head.val);\n            head = head.next;\n        }\n    }\n    \n    public int getRandom() {        \n        int i = ran.nextInt(list.size());\n        return list.get(i);\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(head);\n * int param_1 = obj.getRandom();\n */","compare_result":"11111111","title_slug":"linked-list-random-node","has_notes":false}