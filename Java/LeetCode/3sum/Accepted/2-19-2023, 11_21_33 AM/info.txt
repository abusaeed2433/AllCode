{"id":900768475,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676784093,"status":10,"status_display":"Accepted","runtime":"692 ms","url":"/submissions/detail/900768475/","is_pending":"Not Pending","title":"3Sum","memory":"50.1 MB","code":"class Solution {\n    \n    private List<List<Integer>> ans = new ArrayList<>();\n    private Map<Integer,Integer> map = new HashMap<>();\n    Set<List<Integer>> s = new HashSet<>();\n    \n    public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        int n = nums.length;\n        for(int i=0;i<n;i++){\n            map.put( nums[i], map.getOrDefault(nums[i],0)+1 );\n        }\n\n        for(int i=0;i<n;i++){\n            int j = i+1, k = n-1;\n            while(j<k){\n                int sum = nums[i]+nums[j]+nums[k];\n                if(sum == 0){\n                    s.add(Arrays.asList(nums[i],nums[j],nums[k]));\n                    j++;\n                    k--;\n                }\n                else if(sum < 0){\n                    j++;\n                }\n                else{\n                    k--;\n                }\n            }\n        }\n        ans.addAll(s);\n        return ans;\n    }\n    \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}