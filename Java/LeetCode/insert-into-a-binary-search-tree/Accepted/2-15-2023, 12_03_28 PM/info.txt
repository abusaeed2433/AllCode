{"id":898291273,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676441008,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/898291273/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"42.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode insertIntoBST(TreeNode root, int val) {\n        if(root == null) return new TreeNode(val);\n        insert(root,val);\n        return root;\n    }\n\n    private void insert(TreeNode root, int val){\n        if(root.val > val){\n            if(root.left == null){\n                root.left = new TreeNode(val);\n                return;\n            }\n            insert(root.left,val);        \n        }\n        else{\n            if(root.right == null){\n                root.right = new TreeNode(val);\n                return;\n            }\n            insert(root.right,val);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false}