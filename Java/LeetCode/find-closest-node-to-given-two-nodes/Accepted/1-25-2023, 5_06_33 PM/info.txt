{"id":884962281,"lang":"java","lang_name":"Java","time":"1 month, 3 weeks","timestamp":1674644793,"status":10,"status_display":"Accepted","runtime":"3027 ms","url":"/submissions/detail/884962281/","is_pending":"Not Pending","title":"Find Closest Node to Given Two Nodes","memory":"56.1 MB","code":"class Solution {\n    public int closestMeetingNode(int[] edges, int node1, int node2) {\n        \n        int n = edges.length;\n        int[] dist1 = new int[n];\n        int[] dist2 = new int[n];\n\n        for(int i=0;i<n;i++){\n            dist1[i] = dist2[i] = Integer.MAX_VALUE;\n        }\n\n        int nd = node1;\n        dist1[nd] = 0;\n        while( edges[nd] !=-1 && dist1[edges[nd]] == Integer.MAX_VALUE ){\n            dist1[edges[nd]] = dist1[nd]+1;\n            nd = edges[nd];\n        }\n\n        for(int i=0;i<n;i++)\n            System.out.print(dist1[i]+\" \");\n        System.out.println(\"\");        \n\n        nd = node2;\n        dist2[nd] = 0;\n        while( edges[nd] !=-1 && dist2[edges[nd]] == Integer.MAX_VALUE ){\n            dist2[edges[nd]] = dist2[nd]+1;\n            nd = edges[nd];\n        }\n\n        for(int i=0;i<n;i++)\n            System.out.print(dist2[i]+\" \");\n        System.out.println(\"\");        \n\n        int min = Integer.MAX_VALUE, ans = -1;\n\n        for(int i=0;i<n;i++){\n            if( min > Math.max(dist1[i], dist2[i]) ){\n                min = Math.max(dist1[i], dist2[i]);\n                ans = i;\n            }\n        }\n\n        return ans;\n\n\n    }\n\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-closest-node-to-given-two-nodes","has_notes":false}