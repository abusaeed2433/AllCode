{"id":912469754,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1678423716,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/912469754/","is_pending":"Not Pending","title":"Linked List Random Node","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    private List<Integer> list;\n    private Random ran = new Random();\n\n    public Solution(ListNode head) {\n        Set<Integer> set = new HashSet<>();\n        while(head != null){\n            set.add(head.val);\n            head = head.next;\n        }\n        list = new ArrayList<>(set);\n    }\n    \n    public int getRandom() {        \n        int i = ran.nextInt(list.size());\n\n        return list.get(i);\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(head);\n * int param_1 = obj.getRandom();\n */","compare_result":"11111011","title_slug":"linked-list-random-node","has_notes":false}