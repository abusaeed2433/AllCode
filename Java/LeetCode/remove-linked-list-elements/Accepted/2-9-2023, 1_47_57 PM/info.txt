{"id":894565561,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1675928877,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/894565561/","is_pending":"Not Pending","title":"Remove Linked List Elements","memory":"43 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode removeElements(ListNode head, int val) {\n        \n        ListNode ans = null, last = null;\n\n        while( head != null){\n\n            ListNode hd = remove(head,val);\n\n            if(ans == null) {\n                ans = hd;\n                last = hd;\n            }\n            else {\n                last.next = hd;\n                last = hd;\n            }\n\n            if(hd != null)\n                head = hd.next;\n            else head = null;\n\n        }\n\n        return ans;\n    }\n\n    private ListNode remove(ListNode head,int val){\n        while(head != null && head.val == val)\n            head = head.next;\n\n        return head;\n    }\n\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-linked-list-elements","has_notes":false}