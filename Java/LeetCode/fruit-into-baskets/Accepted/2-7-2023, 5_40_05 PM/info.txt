{"id":893287715,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1675770005,"status":10,"status_display":"Accepted","runtime":"2449 ms","url":"/submissions/detail/893287715/","is_pending":"Not Pending","title":"Fruit Into Baskets","memory":"54.5 MB","code":"class Solution {\n\n    private Node[] map = new Node[2];\n\n    private int ans = 0;\n\n    public int totalFruit(int[] fruits) {\n\n        for(int i=0;i<2;i++) {\n            map[i] = new Node();\n        }\n    \n        int i=0, j = 0; \n        \n        for( ; i<fruits.length ; ){\n            \n            if( canITake(fruits[i]) ){\n                i++;\n            }\n            else{\n                decrease(fruits[j]);\n                j++;\n            }    \n            ans = Math.max(i-j,ans);  \n            System.out.println(j+\" \"+i+\" \"+ans);\n        }\n\n        return ans;\n    }\n\n    private void decrease(int fruit){\n        for(int i=0;i<2;i++){\n            if(map[i].val == fruit){\n                map[i].count--;\n                if(map[i].count <= 0)\n                    map[i] = new Node();\n                return;\n            }\n            else{\n                map[(i+1)%2].count--;\n                if( map[(i+1)%2].count <= 0 )\n                    map[ (i+1)%2 ] = new Node();\n                return;\n            }\n        }\n    }\n\n    private boolean canITake(int val){\n\n        for(int i=0; i<2; i++){\n            if( map[i].val == val){               \n                map[i].count++;\n                return true;\n            }\n\n            if( map[i].val == -1){\n                map[i].val = val;\n                map[i].count=1;\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\nclass Node{\n    public int val = -1, count = 0;    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fruit-into-baskets","has_notes":false}