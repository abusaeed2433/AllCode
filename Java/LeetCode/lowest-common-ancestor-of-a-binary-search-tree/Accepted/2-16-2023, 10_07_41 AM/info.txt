{"id":898894988,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676520461,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/898894988/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"43.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n\n        if( p.val < root.val && q.val < root.val){ //search in left subtree\n            return lowestCommonAncestor(root.left,p,q);\n        }\n        if(p.val > root.val && q.val > root.val){ // right subtree\n            return lowestCommonAncestor(root.right,p,q);\n        }\n\n        return root;\n    }\n}","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}