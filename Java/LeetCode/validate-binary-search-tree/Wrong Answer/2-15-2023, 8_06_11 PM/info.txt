{"id":898515643,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1676469971,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/898515643/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        if(root == null) return true;\n\n        if( (root.left == null || root.left.val < root.val) &&\n            (root.right == null || root.right.val > root.val) ){\n                return isValidBST(root.left) && isValidBST(root.right);\n        }\n        else{\n            return false;\n        }\n    }\n}","compare_result":"1111111111110010010011111111111111111111111111111111111111111111111111111011111011","title_slug":"validate-binary-search-tree","has_notes":false}