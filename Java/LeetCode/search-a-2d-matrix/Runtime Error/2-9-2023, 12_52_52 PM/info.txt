{"id":894540179,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1675925572,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/894540179/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution {\n\n    private int[][] mat;\n    private int target, row, col;\n\n    public boolean searchMatrix(int[][] matrix, int target) {\n        mat = matrix;\n        this.target = target;\n        row = mat.length;\n        col = mat[0].length;\n\n        return bSearch(0,row*col);\n\n    }\n\n    private boolean bSearch(int l, int h){\n        while(l <= h){\n            int mid = (l+h)/2;\n            int i = mid / col;\n            int j = mid % col;\n\n            if(mat[i][j] < target) l = mid+1;\n\n            else if(mat[i][j] == target) return true;\n\n            else\n                h = mid-1;            \n        }\n        return false;\n    }\n}","compare_result":"1111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix","has_notes":false}