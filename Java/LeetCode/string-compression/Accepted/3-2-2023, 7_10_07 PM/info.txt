{"id":907722483,"lang":"java","lang_name":"Java","time":"2 weeks, 6 days","timestamp":1677762607,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/907722483/","is_pending":"Not Pending","title":"String Compression","memory":"42.9 MB","code":"class Solution {\n    public int compress(char[] chars) {\n        ArrayList<Character> list = new ArrayList<>();\n        list.add(chars[0]);\n        char prev = chars[0];\n        int n = chars.length;\n\n        int count = 1;\n        for(int i=1; i<n; i++){\n            if(chars[i]==prev){\n                count++;\n            }\n            else{\n                if(count > 1){\n                    String s = String.valueOf(count);\n                    for(int j=0; j<s.length();j++)\n                        list.add(s.charAt(j));                \n                }\n                list.add(chars[i]);\n                count = 1;\n            }\n            prev = chars[i];\n        }\n        if(count > 1){\n        String s = String.valueOf(count);\n        for(int j=0; j<s.length();j++){\n            list.add(s.charAt(j));\n        }\n        }\n        //System.out.println(Arrays.asList(list));\n        //chars = new char[list.size()];\n        for(int i=0; i<list.size();i++){\n            chars[i] = list.get(i);\n            //System.out.print(chars[i]+\" \");\n        }\n        return list.size();\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression","has_notes":false}